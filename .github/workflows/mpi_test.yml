# This workflow will run the mpi tests on every push and pull request to the repository.

name: MPI-Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        mpi: [ 'mpich', 'openmpi', 'intelmpi']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mpi4py
        pip install pytest coverage pytest-cov pytest-mpi

    - name: Install the base package
      run: |
        pip install -e .[full]

    - name: Run the tests
      run: |
        # only run the coverage test with openmpi
        if [ "${{ matrix.mpi }}" = "openmpi" ]; then
            mpiexec -n 3 bash -c 'COVERAGE_FILE=.coverage.$OMPI_COMM_WORLD_RANK pytest --cov=src --with-mpi --junitxml=junit.xml -o junit_family=legacy tests/test_sweepexp_mpi.py'
        else
            mpiexec -n 3 pytest --with-mpi tests/test_sweepexp_mpi.py
        fi

    - name: Combine coverage reports
      run: |
        if [ "${{ matrix.mpi }}" = "openmpi" ]; then
            coverage combine
        fi

    - name: Upload test results
      if: ${{ !cancelled() }} && ${{ matrix.mpi == 'openmpi' }}
      uses: codecov/test-results-action@v1
      with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: mpi

    - name: Upload coverage reports to Codecov
      if: ${{ matrix.mpi == 'openmpi' }}
      uses: codecov/codecov-action@v5
      with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: mpi
